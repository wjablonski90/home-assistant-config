---
# Projector Bedroom Off timer automations

# Open exit window when 5 minutes lefts
# - alias: Five minutes before end open exit window
#   trigger: 
#     - platform: template
#       value_template: "{% if states.sensor.projector_bedroom_off_timer_remaining.state | int <= 5 %} true {% endif %}"
#   condition:
#     - condition: state
#       entity_id: switch.projector_bedroom_off_timer
#       state: 'on'
#   action:
#     - service: androidtv.adb_command
#       entity_id: media_player.projector_bedroom
#       data:
#         command: "input keyevent --longpress 26"
#     - delay: 00:00:05
#     - service: androidtv.adb_command
#       entity_id: media_player.projector_bedroom
#       data:
#         command: "input keyevent 23"

- alias: Ask whether projector timer should be started
  trigger:
    - platform: template
      value_template: 
        "{{ is_state('binary_sensor.projector_bedroom_ping', 'on') 
          and is_state('switch.projector_bedroom_off_timer', 'off')
          and now().minute % 30 == 0 
          and now().second == 0 }}"
  condition:
    - condition: time
      after: '21:30:00'
  action:
    - service: notify.family
      data:
        title: "Projektor włączony"
        message: "Czy chcesz ustawić timer wyłączenia?"
        data:
          actions:
            - action: "30 min"
              title: +30 min
            - action: "60 min"
              title: +60 min
            - action: "90 min"
              title: +90 min

# Extend off timer when less than 10 minutes remaining to shutdown
- alias: Extend off timer when less than 10 minutes remaining to shutdown
  trigger: 
    - platform: state
      entity_id: sensor.projector_bedroom_off_timer_remaining
  condition:
    - condition: state
      entity_id: switch.projector_bedroom_off_timer
      state: 'on'
    - condition: or
      conditions:
        - condition: state
          entity_id: sensor.projector_bedroom_off_timer_remaining
          state: '5'
        - condition: state
          entity_id: sensor.projector_bedroom_off_timer_remaining
          state: '10'
  action:
    service: notify.family
    data:
      title: "Projektor włączony"
      message: "Czy chcesz ustawić timer wyłączenia?"
      data:
        actions:
          - action: "30 min"
            title: +30 min
          - action: "60 min"
            title: +60 min
          - action: "90 min"
            title: +90 min

- alias: "Response for 30 min"
  trigger: 
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: "30 min"
  condition:
    - condition: numeric_state
      entity_id: sensor.projector_bedroom_off_timer_remaining
      below: 11
  action:
    - service: input_number.set_value
      entity_id: input_number.projector_bedroom_off_timer
      data_template:
        value: >
          {% if is_state('switch.projector_bedroom_off_timer', 'off') %}
            30
          {% else %} 
            {{ (states.sensor.projector_bedroom_off_timer_remaining.state | int) + 30 }}
          {% endif %}
    - service: switch.turn_on
      entity_id: switch.projector_bedroom_off_timer
    - service: notify.family
      data_template:
        title: "Projektor"
        message: "Zaplanowano wyłączenie o godzinie {{ (now().strftime('%s') | int + states.sensor.projector_bedroom_off_timer_remaining.state | int * 60)  | timestamp_custom('%H:%M', false) }}"

- alias: "Response for 60 min"
  trigger: 
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: "60 min"
  condition:
    - condition: numeric_state
      entity_id: sensor.projector_bedroom_off_timer_remaining
      below: 11
  action:
    - service: input_number.set_value
      entity_id: input_number.projector_bedroom_off_timer
      data_template:
        value: >
          {% if is_state('switch.projector_bedroom_off_timer', 'off') %}
            60
          {% else %} 
            {{ (states.sensor.projector_bedroom_off_timer_remaining.state | int) + 60 }}
          {% endif %}
    - service: switch.turn_on
      entity_id: switch.projector_bedroom_off_timer
    - service: notify.family
      data_template:
        title: "Projektor"
        message: "Zaplanowano wyłączenie o godzinie {{ (now().strftime('%s') | int + states.sensor.projector_bedroom_off_timer_remaining.state | int * 60) | timestamp_custom('%H:%M', false) }}"

- alias: "Response for 90 min"
  trigger: 
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: "90 min"
  condition:
    - condition: numeric_state
      entity_id: sensor.projector_bedroom_off_timer_remaining
      below: 11
  action:
    - service: input_number.set_value
      entity_id: input_number.projector_bedroom_off_timer
      data_template:
        value: >
          {% if is_state('switch.projector_bedroom_off_timer', 'off') %}
            90
          {% else %} 
            {{ (states.sensor.projector_bedroom_off_timer_remaining.state | int) + 90 }}
          {% endif %}
    - service: switch.turn_on
      entity_id: switch.projector_bedroom_off_timer
    - service: notify.family
      data_template:
        title: "Projektor"
        message: "Zaplanowano wyłączenie o godzinie {{ (now().strftime('%s') | int + states.sensor.projector_bedroom_off_timer_remaining.state | int * 60) | timestamp_custom('%H:%M', false) }}"

# Turn the projector off when time is out
- alias: Turn the projector off when the time is out
  trigger: 
    - platform: template
      value_template: "{% if states.sensor.projector_bedroom_off_timer_remaining.state | int == 0 %} true {% endif %}"
  condition:
    - condition: state
      entity_id: switch.projector_bedroom_off_timer
      state: 'on'
  action:
    - repeat:
        until:
          - condition: state
            entity_id: binary_sensor.projector_bedroom_ping
            state: 'off'
        sequence:
          - service: androidtv.adb_command
            entity_id: media_player.projector_bedroom
            data:
              command: "input keyevent --longpress 26 && input keyevent 22 && input keyevent 23"
          - delay: 00:00:30
    - service: switch.turn_off
      entity_id: switch.projector_bedroom_off_timer

# Turn the projector off at 12am and when timer is not set
- alias: Turn the projector off at 12 am and when the timer is not set
  trigger: 
    - platform: time
      at: '00:00'
  condition:
    - condition: state
      entity_id: switch.projector_bedroom_off_timer
      state: 'off'
  action:
    - repeat:
        until:
          - condition: state
            entity_id: binary_sensor.projector_bedroom_ping
            state: 'off'
        sequence:
          - service: androidtv.adb_command
            entity_id: media_player.projector_bedroom
            data:
              command: "input keyevent --longpress 26 && input keyevent 22 && input keyevent 23"
          - delay: 00:00:30
    - service: switch.turn_off
      entity_id: switch.projector_bedroom_off_timer